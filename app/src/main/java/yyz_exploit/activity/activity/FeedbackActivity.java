package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import yyz_exploit.activity.adapter.FeedbackAdapter;
import yyz_exploit.activity.adapter.HelpAdapter;
import yyz_exploit.bean.FeedbackBean;

public class FeedbackActivity extends AppCompatActivity implements View.OnClickListener{
    private ImageView iv_back_left;
    private TextView layout_name;
    private ImageView iv_add;
    private RecyclerView feed_recy;
    private List<FeedbackBean> feedbackBeanList=new ArrayList<>();
    private JYKJApplication mApp;
    private String mNetLoginRetStr;
    private Handler mHandler;
    private FeedbackAdapter feedbackAdapter;
    private LinearLayoutManager layoutManager;
    private List<FeedbackBean> list;
    private String mNetRetStr;                 //返回字符串
    private NetRetEntity netRetEntity;
    private Integer feedbackTypeId;
    private LinearLayout iv_back_left1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_feedback);
        mApp = (JYKJApplication) FeedbackActivity.this.getApplication();
        ActivityUtil.setStatusBarMain(FeedbackActivity.this);
        initView();
        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        map.put("upTypeId", "0");
        data(map);
        initHandler();
    }

    @SuppressLint("HandlerLeak")
    private void initHandler() {
        mHandler = new Handler() {
            @SuppressLint("HandlerLeak")
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case 1:
                        if (mNetLoginRetStr != null && !mNetLoginRetStr.equals("")) {
                           if(!netRetEntity.getResData().equals("0")){
                               feedbackBeanList = JSON.parseArray(JSON.parseObject(mNetLoginRetStr,NetRetEntity.class).getResJsonData(), FeedbackBean.class);
                               list=new ArrayList<>();
                               for (int i=0;i<feedbackBeanList.size();i++){
                                   list.add( feedbackBeanList.get(i));
                               }
                               feedbackAdapter=new FeedbackAdapter(list);
                               feedbackAdapter.notifyDataSetChanged();
                               layoutManager = new LinearLayoutManager(FeedbackActivity.this);
                               layoutManager.setOrientation(LinearLayout.VERTICAL);
                               feed_recy.setLayoutManager(layoutManager);
                               feed_recy.setAdapter(feedbackAdapter);
                               feedbackAdapter.setOnClickListener(new FeedbackAdapter.onClickListener() {
                                   @Override
                                   public void onClick(View view, int position) {
                                       if (netRetEntity.getResCode() == 0) {
                                           Intent intent = new Intent(FeedbackActivity.this, OpinionActivity.class);
                                            intent.putExtra("id",feedbackBeanList.get(position).getFeedbackTypeId());
                                           Log.e("tag", "编号 "+feedbackBeanList.get(position).getFeedbackTypeId() );
                                           startActivity(intent);
                                           finish();
                                       }else if(netRetEntity.getResCode()==1&&netRetEntity.getResData().equals("0")){
                                           Intent intent = new Intent(FeedbackActivity.this, OpinionActivity.class);
                                           intent.putExtra("id",feedbackBeanList.get(position).getFeedbackTypeId());
                                           Log.e("tag", "编号 "+feedbackBeanList.get(position).getFeedbackTypeId() );
                                           startActivity(intent);
                                           finish();
                                       }
                                       else {
                                           Integer feedbackTypeId = list.get(position).getFeedbackTypeId();
                                           HashMap<String, String> map = new HashMap<>();
                                           map.put("loginDoctorPosition", "108.93425^34.23053");
                                           map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
                                           map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
                                           map.put("upTypeId",feedbackTypeId+"" );
                                           list.clear();
                                           data(map);
                                       }
                                   }
                               });

                           }

                        }

                        break;
                    case 2:
                        break;
                }
            }
        };
    }

    private void data(HashMap<String, String> map) {

        new Thread() {
            public void run() {
                try {
                    mNetLoginRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "doctorPersonalSetControlle/searchBasicsSystemFeedbackTypeList");
                    Log.e("tag", "帮助"+mNetLoginRetStr );
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetLoginRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }
                netRetEntity = JSON.parseObject(mNetLoginRetStr, NetRetEntity.class);

                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }

    private void initView() {
        feed_recy = findViewById(R.id.feed_recy);
        //返回
        iv_back_left1 = findViewById(R.id.ll_back);
        iv_back_left1.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case  R.id.ll_back:
                finish();
                break;
        }
    }
}
