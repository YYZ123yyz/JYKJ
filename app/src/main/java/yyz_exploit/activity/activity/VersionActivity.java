package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.LinearLayout;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnLoadMoreListener;
import com.scwang.smartrefresh.layout.listener.OnRefreshListener;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import yyz_exploit.activity.adapter.HelpAdapter;
import yyz_exploit.activity.adapter.VerSionAdapter;
import yyz_exploit.bean.ProvideBasicsVersionUpdDesc;

public class VersionActivity extends AppCompatActivity implements  View.OnClickListener {

    private LinearLayout back;
    private RecyclerView ver_recy;
   private JYKJApplication mApp;
    private String mNetLoginRetStr;
    private Handler mHandler;
    private List<ProvideBasicsVersionUpdDesc> provideBasicsVersionUpdDescs= new ArrayList<>();
    private LinearLayoutManager layoutManager;
    private VerSionAdapter verSionAdapter;
    private List<ProvideBasicsVersionUpdDesc> provideBasicsVersionUpdDescs1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_version);
        mApp = (JYKJApplication) VersionActivity.this.getApplication();
        ActivityUtil.setStatusBarMain(VersionActivity.this);
        initView();
        layoutManager = new LinearLayoutManager(VersionActivity.this);
        layoutManager.setOrientation(LinearLayout.VERTICAL);
        ver_recy.setLayoutManager(layoutManager);
        data();
        initHandler();
    }


    @SuppressLint("HandlerLeak")
    private void initHandler() {
        mHandler = new Handler() {
            @SuppressLint("HandlerLeak")
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case 1:
                        if (mNetLoginRetStr != null && !mNetLoginRetStr.equals("")) {
                            provideBasicsVersionUpdDescs1 = JSON.parseArray(JSON.parseObject(mNetLoginRetStr, NetRetEntity.class).getResJsonData(), ProvideBasicsVersionUpdDesc.class);
                            verSionAdapter=new VerSionAdapter(provideBasicsVersionUpdDescs1);
                            ver_recy.setAdapter(verSionAdapter);


                        }

                        break;
                }
            }
        };
    }


    private void data() {
        HashMap<String, String> map = new HashMap<>();
        map.put("rowNum", "10");
        map.put("pageNum", "1");
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("requestClientType", "1");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());

        new Thread() {
            public void run() {
                try {
                    mNetLoginRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "doctorPersonalSetControlle/searchVersionUpdateDescription");
                    Log.e("tag", "更新 "+mNetLoginRetStr );
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetLoginRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }

                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }



    private void initView() {
        back = findViewById(R.id.back);
        back.setOnClickListener(this);

        ver_recy = findViewById(R.id.ver_recy);

    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.back:
                finish();
                break;
        }
    }
}
