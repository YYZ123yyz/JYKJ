package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.app.Dialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.os.StrictMode;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.bumptech.glide.Glide;
import com.google.gson.Gson;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;

import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import www.jykj.com.jykj_zxyl.util.BitmapUtil;
import www.jykj.com.jykj_zxyl.util.DateUtils;

/*
* 意见反馈
*
* */
public class OpinionActivity extends AppCompatActivity implements View.OnClickListener{

    private ImageView iv_add;
    private TextView layout_name;
    private ImageView iv_back_left;
    private ImageView add_img;
    private File mTempFile;              //声明一个拍照结果的临时文件

    private EditText editText;
    private TextView textView;
    private TextView tv_time;
   private String startTime;
   private JYKJApplication mApp;
    private EditText tv_messageReply;
    private String id;
    private String mNetLoginRetStr;
    private NetRetEntity netRetEntity;
    private Handler mHandler;
    private TextView tv_commit;
    private int feedbackTypeId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_opinion);
        ActivityUtil.setStatusBarMain(OpinionActivity.this);
        mApp = (JYKJApplication) OpinionActivity.this.getApplication();

        Intent intent = getIntent();
        feedbackTypeId = intent.getExtras().getInt("id");
        Log.e("tag", "initView: "+feedbackTypeId );
        initView();
        initHandler();
    }

    @SuppressLint("HandlerLeak")
    private void initHandler() {
        mHandler = new Handler() {
            @SuppressLint("HandlerLeak")
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case 1:
                        if(netRetEntity.getResCode()==0){
                            Toast.makeText(OpinionActivity.this,"提交失败",Toast.LENGTH_SHORT).show();
                        }
                        else{
                            Toast.makeText(OpinionActivity.this,netRetEntity.getResMsg(),Toast.LENGTH_SHORT).show();
                            Intent intent = new Intent(OpinionActivity.this, FeedbackActivity.class);
                            startActivity(intent);
                            finish();
                        }
                      break;
                }
            }
        };
    }

    private void data() {

        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        map.put("imgCode","123");
        map.put("feedbackTypeId",feedbackTypeId+"");
        map.put("faultDate",startTime);
        map.put("feedbackContent",editText.getText().toString());
        map.put("contactPhone",tv_messageReply.getText().toString());
        new Thread() {
            public void run() {
                try {
                    mNetLoginRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "/doctorPersonalSetControlle/operSubmitBasicsSystemFeedback");
                    Log.e("tag", "j建议 "+mNetLoginRetStr );
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetLoginRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }
                netRetEntity = JSON.parseObject(mNetLoginRetStr, NetRetEntity.class);

                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }

    @SuppressLint("WrongViewCast")
    private void initView() {

        tv_commit = findViewById(R.id.tv_commit);
        tv_commit.setOnClickListener(this);
        tv_messageReply = findViewById(R.id.tv_messageReply);
        tv_time = findViewById(R.id.tv_time);
        tv_time.setOnClickListener(this);
        iv_add = findViewById(R.id.iv_add);
        iv_add.setVisibility(View.INVISIBLE);

        layout_name = findViewById(R.id.layout_name);
        layout_name.setText("反馈建议");

        iv_back_left = findViewById(R.id.iv_back_left);
        iv_back_left.setOnClickListener(this);

        editText=(EditText) findViewById(R.id.id_editor_detail);
        textView=(TextView) findViewById(R.id.id_editor_detail_font_count);

        editText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                textView.setText(String.valueOf(s.length())+"/300");
                if(s.length()>=200){
                    Toast.makeText(OpinionActivity.this, "上限了，亲", Toast.LENGTH_SHORT).show();
                }
            }

        });
    }

    @Override
    public void onClick(View v) {
         switch (v.getId()){
             case R.id.tv_commit:
                 if(TextUtils.isEmpty(editText.getText().toString())){
                     Toast.makeText(OpinionActivity.this,"请输入您的问题",Toast.LENGTH_SHORT).show();
                     return;
                 }
                 if(TextUtils.isEmpty(startTime)){
                     Toast.makeText(OpinionActivity.this,"请选择时间",Toast.LENGTH_SHORT).show();
                     return;
                 }if(tv_messageReply==null&&tv_messageReply.equals("")){
                 Toast.makeText(OpinionActivity.this,"请留下您的手机号",Toast.LENGTH_SHORT).show();
                 return;
             }
                 data();
                 break;
             case R.id.iv_back_left:
                 finish();
                 break;
             case R.id.tv_time:
                 DateUtils.showDatePickerDialog(this, false, "请选择月日", 2020, 1, 1, new DateUtils.OnDatePickerListener() {
                     @Override
                     public void onConfirm(int year, int month, int dayOfMonth) {
                         startTime = year+"-"+month+"-"+dayOfMonth;
                         tv_time.setText(startTime);
                     }

                     @Override
                     public void onCancel() {

                     }
                 });
                 break;
         }
    }




}
