package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.app.Dialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Environment;
import android.os.StrictMode;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;

import java.io.File;
import java.io.FileNotFoundException;

import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import www.jykj.com.jykj_zxyl.util.BitmapUtil;

/*
* 意见反馈
*
* */
public class OpinionActivity extends AppCompatActivity implements View.OnClickListener{

    private ImageView iv_add;
    private TextView layout_name;
    private ImageView iv_back_left;
    private ImageView add_img;
    private File mTempFile;              //声明一个拍照结果的临时文件

    private EditText editText;
    private TextView textView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_opinion);
        ActivityUtil.setStatusBarMain(OpinionActivity.this);
        initView();
    }

    @SuppressLint("WrongViewCast")
    private void initView() {
        iv_add = findViewById(R.id.iv_add);
        iv_add.setVisibility(View.INVISIBLE);

        layout_name = findViewById(R.id.layout_name);
        layout_name.setText("反馈建议");

        iv_back_left = findViewById(R.id.iv_back_left);
        iv_back_left.setOnClickListener(this);

        editText=(EditText) findViewById(R.id.id_editor_detail);
        textView=(TextView) findViewById(R.id.id_editor_detail_font_count);

        editText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                textView.setText(String.valueOf(s.length())+"/300");
                if(s.length()>=300){
                    Toast.makeText(OpinionActivity.this, "上限了，亲", Toast.LENGTH_SHORT).show();
                }
            }

        });
    }

    @Override
    public void onClick(View v) {
         switch (v.getId()){
             case R.id.iv_back_left:
                 finish();
                 break;

         }
    }
    /**
     * 创建临时文件夹 _tempphoto
     */
    private void initDir() {
        // 声明目录
        File tempDir = new File(Environment.getExternalStorageDirectory().getAbsolutePath()
                + "/_tempphoto");
        if (!tempDir.exists()) {
            tempDir.mkdirs();// 创建目录
        }
        mTempFile = new File(tempDir, BitmapUtil.getPhotoFileName());// 生成临时文件
    }
    @Override
    protected void onActivityResult(
            int requestCode,  // 请求码 自定义
            int resultCode,  // 结果码 成功 -1 == OK
            Intent data) { // 数据 ? 可以没有
        try {

            // 如果是直接从相册获取
            if (requestCode == Constant.SELECT_PIC_FROM_ALBUM
                    && resultCode == RESULT_OK
                    && data != null) {

                final Uri uri = data.getData();//返回相册图片的Uri
                BitmapUtil.startPhotoZoom(OpinionActivity.this, uri, 450);
            }

            // 处理拍照返回
            if (requestCode == Constant.SELECT_PIC_BY_TACK_PHOTO
                    && resultCode == RESULT_OK) {// 拍照成功 RESULT_OK= -1
                // 剪裁图片
                BitmapUtil.startPhotoZoom(OpinionActivity.this, Uri.fromFile(mTempFile), 450);
            }
            // 接收剪裁回来的结果
            if (requestCode == Constant.REQUEST_PHOTO_CUT
                    && resultCode == RESULT_OK) {// 剪裁加工成功
                //让剪裁结果显示到图片框
                setPicToView(data);
            }
        } catch (Exception e) {
            Log.i("yi", "yichahahaha");
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    public void setPicToView(Intent data) {
        Bitmap photo;
        try {
            Uri u = data.getData();
            if (u != null) {
                photo = BitmapFactory.decodeStream(getContentResolver().openInputStream(data.getData()));//将imageUri对象的图片加载到内存
            } else {
                System.out.println("进来了");
                photo = BitmapFactory.decodeStream(getContentResolver().openInputStream(Uri.fromFile(new File(Environment.getExternalStorageDirectory(), "test.jpg"))));//将imageUri对象的图片加载到内存
            }
            System.out.println("图片：" + photo);
           // mUserHeadBitmap = photo;

            //显示图片
//            mUserHeadImage.setImageBitmap(photo);
        //    Glide.with(this).load(photo).into(mUserHeadImage);

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

}
