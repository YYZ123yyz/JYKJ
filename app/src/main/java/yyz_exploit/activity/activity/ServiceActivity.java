package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;
import entity.basicDate.ProvideBasicsDomain;
import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import yyz_exploit.activity.adapter.Detect_RVAdapter;
import yyz_exploit.activity.adapter.Rv_ServiceAdapter;
import yyz_exploit.activity.adapter.Rv_ServicesAdapter;
import yyz_exploit.bean.CommitBean;
import yyz_exploit.bean.DetectBean;
import yyz_exploit.bean.ServiceBean;
import yyz_exploit.bean.ServicesBean;

public class ServiceActivity extends AppCompatActivity implements View.OnClickListener {
    public ProgressDialog mDialogProgress = null;
    @BindView(R.id.ll_back)
    LinearLayout llBack;
    @BindView(R.id.commit)
    TextView commit;
    @BindView(R.id.iv_activityServicePermisionSet_serviceSet)
    ImageView ivActivityServicePermisionSetServiceSet;
    @BindView(R.id.rv_Detect)
    RecyclerView rvDetect;
    @BindView(R.id.rv_coaching)
    RecyclerView rvCoaching;
    private JYKJApplication mApp;
    private Handler mHandler;
    private String mNetRetStr;                 //获取返回字符串
    private Context mContext;
    private ServiceActivity mActivity;
    private LinearLayoutManager layoutManager;
    private List<ServiceBean> serviceBeans;
    private Rv_ServiceAdapter rvServiceAdapter;
    private Rv_ServicesAdapter rv_servicesAdapter;
    private int mServiceType;              //服务类型
    private int mDoctorStatus;              //医生认证状态
    private List<ServicesBean> servicesBeans;
    private List<ServiceBean> mDetect = new ArrayList<>();            //类别
    private List<ServicesBean> mCoaching = new ArrayList<>();            //类型
    private String subinfo;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_service);
        ButterKnife.bind(this);
        mContext = this;
        mActivity = this;
        mApp = (JYKJApplication) getApplication();
        ActivityUtil.setStatusBarMain(mActivity);

        //检测类型
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(mContext);
        linearLayoutManager.setOrientation(LinearLayout.VERTICAL);
        rvDetect.setLayoutManager(linearLayoutManager);
        //如果可以确定每个item的高度是固定的，设置这个选项可以提高性能
        rvDetect.setHasFixedSize(true);

        //辅导类型
        layoutManager = new LinearLayoutManager(mActivity);
        layoutManager.setOrientation(LinearLayout.VERTICAL);
        rvCoaching.setLayoutManager(layoutManager);
        rvCoaching.setHasFixedSize(true);
        //   mDoctorStatus = getIntent().getIntExtra("doctorStatus", 0);
        mServiceType = getIntent().getIntExtra("serviceType", 0);
        initView();
        getData();
        getDatas();
        initHandler();
    }


    private void initView() {
        llBack.setOnClickListener(this);
        commit.setOnClickListener(this);
        ivActivityServicePermisionSetServiceSet.setOnClickListener(this);
    }

    private void initHandler() {
        mHandler = new Handler() {
            @SuppressLint("HandlerLeak")
            @Override
            public void handleMessage(Message msg) {
                super.handleMessage(msg);
                switch (msg.what) {
                    //检测类型
                    case 1:
                        cacerProgress();
                        if (mNetRetStr != null && !mNetRetStr.equals("")) {
                            serviceBeans = JSON.parseArray(JSON.parseObject(mNetRetStr, NetRetEntity.class).getResJsonData(), ServiceBean.class);
                            rvServiceAdapter = new Rv_ServiceAdapter(serviceBeans, mContext, mActivity);
                            rvDetect.setAdapter(rvServiceAdapter);
                        }
                        break;
                    //辅导类型
                    case 2:
                        cacerProgress();
                        if (mNetRetStr != null && !mNetRetStr.equals("")) {
                            servicesBeans = JSON.parseArray(JSON.parseObject(mNetRetStr, NetRetEntity.class).getResJsonData(), ServicesBean.class);
                            rv_servicesAdapter = new Rv_ServicesAdapter(servicesBeans, mContext, mActivity);
                            rvCoaching.setAdapter(rv_servicesAdapter);
                        }
                        break;
                    case 3:
                        cacerProgress();
                        NetRetEntity retEntity = new NetRetEntity();
                        if (retEntity.getResCode() == 1) {
                            Log.e("tag", "handleMessage: " + retEntity.getResMsg());
                            Toast.makeText(mActivity, retEntity.getResMsg(), Toast.LENGTH_SHORT).show();
                            finish();
                        } else {
                            Log.e("tag", "handleMessage: " + retEntity.getResMsg());
                        }
                        break;
                }
            }
        };
    }


    private void getData() {
        getProgressBar("请稍候...", "正在加载数据");
        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        map.put("operDoctorAlias", mApp.mViewSysUserDoctorInfoAndHospital.getUserNameAlias());
        map.put("configDetailTypeCode", "10");
        new Thread() {
            public void run() {
                try {
                    mNetRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "doctorSignControlle/searchDoctorSignConfigDetail");
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }

                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }

    private void getDatas() {
        getProgressBar("请稍候...", "正在加载数据");
        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        map.put("operDoctorAlias", mApp.mViewSysUserDoctorInfoAndHospital.getUserNameAlias());
        map.put("configDetailTypeCode", "20");
        new Thread() {
            public void run() {
                try {
                    mNetRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "doctorSignControlle/searchDoctorSignConfigDetail");
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }

                mHandler.sendEmptyMessage(2);
            }
        }.start();
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.ll_back:
                finish();
                break;
            case R.id.iv_activityServicePermisionSet_serviceSet:
//                if(mServiceType==1){
//                    if (mProvideDoctorSetService.getFlagOpening() == 0)
//                        mProvideDoctorSetService.setFlagOpening(1);
//                    else
//                        mProvideDoctorSetService.setFlagOpening(0);
//                    if (mProvideDoctorSetService.getFlagOpening() == 1)
//                        mServiceSetStateImg.setImageResource(R.mipmap.sharedataset_close);
//                    else
//                        mServiceSetStateImg.setImageResource(R.mipmap.sharedataset_close);
//                }else{
//                    if (mProvideDoctorSetService.getFlagOpening() == 0)
//                        mProvideDoctorSetService.setFlagOpening(1);
//                    else
//                        mProvideDoctorSetService.setFlagOpening(0);
//                    if (mProvideDoctorSetService.getFlagOpening() == 1)
//                        mServiceSetStateImg.setImageResource(R.mipmap.sharedataset_close);
//                    else
//                        mServiceSetStateImg.setImageResource(R.mipmap.sharedataset_open);
//                }
                break;
            case R.id.commit:
                commit();
                break;
        }
    }
    private void commit() {
        getProgressBar("请稍候...", "正在提交");
        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        CommitBean commitBean = new CommitBean();
        commitBean.setServiceBeans(serviceBeans);
        commitBean.setServicesBeans(servicesBeans);
        String s = new Gson().toJson(commitBean);
        map.put("priceList", s);

        new Thread() {
            public void run() {
                try {
                    mNetRetStr = HttpNetService.getUpgradeInfo("jsonDataInfo=" + new Gson().toJson(map), Constant.LocalUrl + "doctorSignControlle/operDoctorSignConfigPriceBatch");
                    Log.e("TAG", "提交 " + mNetRetStr);
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }

                mHandler.sendEmptyMessage(3);
            }
        }.start();
    }


    /**
     * 获取进度条
     */

    public void getProgressBar(String title, String progressPrompt) {
        if (mDialogProgress == null) {
            mDialogProgress = new ProgressDialog(mContext);
        }
        mDialogProgress.setTitle(title);
        mDialogProgress.setMessage(progressPrompt);
        mDialogProgress.setCancelable(false);
        mDialogProgress.show();
    }

    /**
     * 取消进度条
     */
    public void cacerProgress() {
        if (mDialogProgress != null) {
            mDialogProgress.dismiss();
        }
    }
}