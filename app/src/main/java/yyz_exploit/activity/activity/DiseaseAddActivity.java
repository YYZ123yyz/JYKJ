package yyz_exploit.activity.activity;

import android.annotation.SuppressLint;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;

import java.util.HashMap;

import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import yyz_exploit.dialog.ImageView;

public class DiseaseAddActivity extends AppCompatActivity  implements View.OnClickListener{
    private View iv_back_left;
    private View iv_add;
    private TextView layout_name;
    private EditText dis_ed;
    private Button dis_bt;
    private JYKJApplication mApp;
    private String mNetLoginRetStr;
    private Handler mHandler;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_disease_add);
        mApp = (JYKJApplication) DiseaseAddActivity.this.getApplication();
        initView();
        initHandler();
    }

    private void initView() {
        //返回
        iv_back_left = findViewById(R.id.iv_back_left);
        iv_back_left.setOnClickListener(this);
        //标题栏
        layout_name = findViewById(R.id.layout_name);
        layout_name.setText("添加臆断结果");
        //手机号解绑
//        help_phone = findViewById(R.id.help_phone);
//        help_phone.setOnClickListener(this);
        //快应用
        iv_add = findViewById(R.id.iv_add);
        iv_add.setVisibility(View.INVISIBLE);

        dis_ed = findViewById(R.id.dis_ed);
        dis_bt = findViewById(R.id.dis_bt);
        dis_bt.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.iv_back_left:
                finish();
                break;
            case R.id.dis_bt:
                datas();
                break;
        }
    }

    private void datas() {
        HashMap<String, String> map = new HashMap<>();
        map.put("loginDoctorPosition", "108.93425^34.23053");
        map.put("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        map.put("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        map.put("diseaseName", dis_ed.getText().toString());
        if (dis_ed.getText().toString() == null || "".equals(dis_ed.getText().toString())) {
            Toast.makeText(DiseaseAddActivity.this, "请先填写就诊小结", Toast.LENGTH_SHORT).show();
            return;
        }
        new Thread() {
            public void run() {
                try {
                    mNetLoginRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + new Gson().toJson(map), Constant.SERVICEURL + "doctorInteractDataControlle/operUpdMyClinicDetailByDiagData");
                    Log.e("tag", "run: vvvv"+mNetLoginRetStr );
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetLoginRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();

                }

                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }

    @SuppressLint("HandlerLeak")
    private void initHandler() {
        mHandler = new Handler() {
            @SuppressLint("HandlerLeak")
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case 1:
                            NetRetEntity   netRetEntity = JSON.parseObject(mNetLoginRetStr, NetRetEntity.class);
                            Toast.makeText(DiseaseAddActivity.this,netRetEntity.getResMsg() , Toast.LENGTH_SHORT).show();
                            finish();
                        break;
                }
            }
        };
    }
}
