package yyz_exploit.activity.activity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.AsyncTask;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;
import entity.conditions.QueryKeyworkCond;
import entity.liveroom.Keyword;
import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import www.jykj.com.jykj_zxyl.util.StrUtils;
import yyz_exploit.Utils.FlowLayout;

public class  KeywordActivity extends AppCompatActivity implements View.OnClickListener {

    private ImageView keyword_back;
    private FlowLayout keyword_fl;
    private Context mContext;
    private List<String> list = new ArrayList<>();
    private ArrayList<String> names;
    private Boolean wat=false;
    private TextView keyword_save,customize;
    private String text;
    private SharedPreferences sharedPreferences;
    private String name;
    private KeywordActivity mActivity;
    private static final int CHOSE_SELFKEY_RESULT = 4;
    private LoadKeyworkTask loadKeyworkTask;
    private JYKJApplication mApp;
    private List<Keyword> selkeyword = new ArrayList();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        String selkeywords = StrUtils.defaulObjToStr(getIntent().getStringExtra("selkeywords"));
        if(selkeywords.length()>3){
            selkeyword = JSON.parseArray(selkeywords,Keyword.class);
        }
        mApp = (JYKJApplication)getApplication();
        mActivity = KeywordActivity.this;
        mContext = KeywordActivity.this;
        setContentView(R.layout.activity_keyword);
        ActivityUtil.setStatusBarMain(KeywordActivity.this);

        initView();
    }

    private void initView() {
        //返回
        keyword_back = findViewById(R.id.keyword_back);
        keyword_back.setOnClickListener(this);

        keyword_fl = findViewById(R.id.keyword_fl);

        keyword_save = findViewById(R.id.keyword_save);
        keyword_save.setOnClickListener(this);
        //自定义
        customize=findViewById(R.id.customize);
        customize.setOnClickListener(this);

        /*sharedPreferences = getSharedPreferences("sp",MODE_PRIVATE);
        SharedPreferences.Editor editor= sharedPreferences.edit();
        name = sharedPreferences.getString("name", "");
        editor.commit();*/
//        sp_tv.setText(sharedPreferences.getString("name",""));

        setTwoFlowLayout();

    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        switch (requestCode){
            case CHOSE_SELFKEY_RESULT:
                String retkey = StrUtils.defaulObjToStr(data.getStringExtra("selfdefinkey"));
                if(retkey.length()>0) {
                    ViewGroup.MarginLayoutParams params = new ViewGroup.MarginLayoutParams(ViewGroup.MarginLayoutParams.WRAP_CONTENT, ViewGroup.MarginLayoutParams.WRAP_CONTENT);
                    params.setMargins(14, 14, 14, 14);
                    Keyword paramkey = new Keyword();
                    paramkey.setSelectState("0");
                    paramkey.setAttrCode("0");
                    paramkey.setAttrName(retkey);
                    TextView child = new TextView(mActivity);
                    child.setLayoutParams(params);
                    child.setPadding(8,8,8,8);
                    child.setBackgroundResource(R.drawable.bg_oval_eeeeee_7);
                    child.setText(retkey);
                    child.setTextColor(ContextCompat.getColor(this,R.color.color_666666));
                    child.setTag(paramkey);
                    initEvents(child);//监听
                    keyword_fl.addView(child);
                }
                break;
        }
        super.onActivityResult(requestCode, resultCode, data);
    }



    private void setTwoFlowLayout() {
        //添加数据
        /*names = new ArrayList<String>();
        names.add("医学");
        names.add("高血压防范");
        names.add("降血压");
        names.add("运动健身");
        names.add("降血压");
        names.add("心血管健康");
        names.add("医学");
        names.add("高血压防范");
        names.add("降血压");
        names.add("运动健身");
        names.add("降血压");
        names.add("心血管健康");*/

        //names.add(""+name);
        /*for (int i = 0; i < names.size(); i++) {
            addTextView(names.get(i));
        }*/
        QueryKeyworkCond queryCond = new QueryKeyworkCond();
        queryCond.setLoginUserPosition(mApp.loginDoctorPosition);
        queryCond.setOperUserCode(mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        queryCond.setOperUserName(mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        queryCond.setRequestClientType("1");
        queryCond.setSearchKeywordsType("3");
        loadKeyworkTask = new LoadKeyworkTask(queryCond);
        loadKeyworkTask.execute();
    }


    /**
     *        * 动态添加布局
     *        * @param str
     *
     */
    private void addTextView(String str) {
        TextView child = new TextView(this);
        ViewGroup.MarginLayoutParams params = new ViewGroup.MarginLayoutParams(ViewGroup.MarginLayoutParams.WRAP_CONTENT, ViewGroup.MarginLayoutParams.WRAP_CONTENT);
        params.setMargins(5, 5, 5, 5);
        child.setLayoutParams(params);
        child.setBackgroundResource(R.drawable.flag);
        child.setText(str);
        child.setTextColor(Color.WHITE);
        initEvents(child);//监听
        keyword_fl.addView(child);
    }


    void toastChosetypeLimit(){
        Toast.makeText(mContext,"最多选择三个",Toast.LENGTH_LONG).show();
    }

    /**
     * 87      * 为每个view 添加点击事件
     * 88
     */
    private void initEvents(final TextView tv) {

        tv.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Keyword parbean = (Keyword)v.getTag();
                int exbeanind = -1;
                if("0".equals(parbean.getSelectState())){
                    if(selkeyword.size()<3) {
                        tv.setBackgroundResource(R.drawable.bg_round_a8c0ff_7);
                        tv.setTextColor(ContextCompat.getColor(KeywordActivity.this,R.color.white));
                        parbean.setSelectState("1");
                        for (int i = 0; i < selkeyword.size(); i++) {
                            Keyword selkey = selkeyword.get(i);
                            if (selkey.getAttrCode().equals(parbean.getAttrCode()) && selkey.getAttrName().equals(parbean.getAttrName())) {
                                exbeanind = i;
                            }
                        }
                        if (-1 == exbeanind) {
                            selkeyword.add(parbean);
                        }
                    }else{
                        toastChosetypeLimit();
                    }
                }else{
                    tv.setBackgroundResource(R.drawable.bg_oval_eeeeee_7);
                    tv.setTextColor(ContextCompat.getColor(KeywordActivity.this,R.color.color_666666));
                    parbean.setSelectState("0");
                    for(int i=0;i<selkeyword.size();i++){
                        Keyword selkey = selkeyword.get(i);
                        if(selkey.getAttrCode().equals(parbean.getAttrCode()) && selkey.getAttrName().equals(parbean.getAttrName())){
                            exbeanind = i;
                        }
                    }
                    if(exbeanind>=0 && selkeyword.size()>0){
                        selkeyword.remove(exbeanind);
                    }
                }
                v.setTag(parbean);
            }
        });
    }




    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.keyword_back:
                finish();
                break;
            case R.id.keyword_save:
                List<Keyword> keylist = new ArrayList();
                for(int i=0;i<keyword_fl.getChildCount();i++){
                    View thev = keyword_fl.getChildAt(i);
                    if(null!=thev.getTag()){
                        Keyword parkey = (Keyword)thev.getTag();
                        if("1".equals(parkey.getSelectState())){
                            keylist.add(parkey);
                        }
                    }
                }
                Intent parint = new Intent();
                parint.putExtra("choosekeys",new Gson().toJson(keylist));
                mActivity.setResult(RESULT_OK,parint);
                finish();
                break;
            case R.id.customize:
                Intent intent = new Intent(KeywordActivity.this, CustomizeActivity.class);
                //startActivity(intent);
                startActivityForResult(intent,CHOSE_SELFKEY_RESULT);
                break;
        }
    }

    class LoadKeyworkTask extends AsyncTask<Void,Void,List<Keyword>>{
        QueryKeyworkCond queryCond;
        LoadKeyworkTask(QueryKeyworkCond queryCond){
            this.queryCond = queryCond;
        }
        @Override
        protected List<Keyword> doInBackground(Void... voids) {
            List<Keyword> retlist = new ArrayList();
            try {
                String retstr = HttpNetService.urlConnectionService("jsonDataInfo="+new Gson().toJson(queryCond),"https://www.jiuyihtn.com:41041/broadcastBasicsDataControlle/searchBasicsLiveKeywords");
                NetRetEntity retEntity = JSON.parseObject(retstr,NetRetEntity.class);
                if(1==retEntity.getResCode() && StrUtils.defaulObjToStr(retEntity.getResJsonData()).length()>0){
                    retlist = JSON.parseArray(retEntity.getResJsonData(),Keyword.class);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            return retlist;
        }

        @Override
        protected void onPostExecute(List<Keyword> keywords) {
            if(keywords.size()>0){
                ViewGroup.MarginLayoutParams params = new ViewGroup.MarginLayoutParams(ViewGroup.MarginLayoutParams.WRAP_CONTENT, ViewGroup.MarginLayoutParams.WRAP_CONTENT);
                params.setMargins(14, 14, 14, 14);
                boolean haskey = false;
                for(int i=0;i<keywords.size();i++){
                    Keyword paramkey = keywords.get(i);
                    haskey = false;
                    for(int j=0;j<selkeyword.size();j++){
                        Keyword selkey = selkeyword.get(j);
                        if(selkey.getAttrCode().equals(paramkey.getAttrCode()) && selkey.getAttrName().equals(paramkey.getAttrName())){
                            haskey = true;
                            break;
                        }
                    }
                    TextView child = new TextView(mActivity);
                    child.setPadding(8,8,8,8);
                    child.setLayoutParams(params);
                    if(haskey){
                        child.setBackgroundResource(R.drawable.bg_round_a8c0ff_7);
                        paramkey.setSelectState("1");
                        child.setTextColor(ContextCompat.getColor(KeywordActivity.this,R.color.white));
                    }else {
                        child.setBackgroundResource(R.drawable.bg_oval_eeeeee_7);
                        paramkey.setSelectState("0");
                        child.setTextColor(ContextCompat.getColor(KeywordActivity.this,R.color.color_666666));
                    }
                    child.setText(paramkey.getAttrName());
                    child.setTag(paramkey);
                    initEvents(child);//监听
                    keyword_fl.addView(child);
                }
            }
        }
    }
}
