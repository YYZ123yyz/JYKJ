package yyz_exploit.activity.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;
import com.jcodecraeer.xrecyclerview.XRecyclerView;
import entity.liveroom.PreLiveInfo;
import entity.liveroom.QueryLiveroomCond;
import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.activity.home.MyLiveRoomActivity;
import www.jykj.com.jykj_zxyl.activity.hyhd.LivePublisherActivity;
import www.jykj.com.jykj_zxyl.activity.liveroom.LiveroomDetailActivity;
import www.jykj.com.jykj_zxyl.adapter.PreLiveAdapter;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import www.jykj.com.jykj_zxyl.util.IConstant;
import www.jykj.com.jykj_zxyl.util.StrUtils;

import java.util.ArrayList;
import java.util.List;

public class NoticeActivity extends AppCompatActivity implements View.OnClickListener {
    private JYKJApplication mApp;
    private Activity mActivity;
    private Context mContext;
    private ImageView iv_add,iv_back_left;
    private TextView layout_name;
    private TextView notice_add_forecast;
    LinearLayoutManager mLayoutManager;
    private XRecyclerView notice_recy;
    List<PreLiveInfo> mdatas = new ArrayList();
    private int pageno=1;
    private int lastVisibleIndex = 0;
    boolean mLoadDate = true;
    PreLiveAdapter preLiveAdapter;
    LoadDataTask loadDataTask;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mApp = (JYKJApplication)getApplication();
        mActivity = NoticeActivity.this;
        mContext = NoticeActivity.this;
        setContentView(R.layout.activity_notice);
        ActivityUtil.setStatusBarMain(NoticeActivity.this);
        initView();
    }

    private void initView() {
        iv_add = findViewById(R.id.iv_add);
        iv_add.setVisibility(View.INVISIBLE);
        iv_add.setOnClickListener(this);

        layout_name = findViewById(R.id.layout_name);
        layout_name.setText("直播预告");

        iv_back_left = findViewById(R.id.iv_back_left);
        iv_back_left.setOnClickListener(this);

        notice_add_forecast = findViewById(R.id.notice_add_forecast);
        notice_add_forecast.setOnClickListener(this);

        notice_recy = findViewById(R.id.notice_recy);
        mLayoutManager = new LinearLayoutManager(mContext);
        mLayoutManager.setOrientation(LinearLayout.VERTICAL);
        notice_recy.setLayoutManager(mLayoutManager);
        preLiveAdapter = new PreLiveAdapter(mdatas);
        notice_recy.setAdapter(preLiveAdapter);
        notice_recy.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                if (newState == RecyclerView.SCROLL_STATE_IDLE) {
                    if (mLoadDate) {
                        int lastVisiblePosition = mLayoutManager.findLastVisibleItemPosition();
                        if (lastVisiblePosition >= mLayoutManager.getItemCount() - 1) {
                            pageno++;
                            loadData();
                        }
                    }
                }
            }
        });
        preLiveAdapter.setMyListener(new PreLiveAdapter.OnHotliveItemClickListener() {
            @Override
            public void onClick(int position, View view) {
                switch (view.getId()){
                    case R.id.pre_live_btn:
                        PreLiveInfo parbean = mdatas.get(position);
                        Intent parintent = new Intent(mActivity, LiveroomDetailActivity.class);
                        parintent.putExtra("detailCode",parbean.getDetailsCode());
                        mActivity.startActivity(parintent);
                        break;
                }

            }

            @Override
            public void onLongClick(int position, View view) {

            }
        });
        loadData();
    }

    void loadData(){
        QueryLiveroomCond queryCond = new QueryLiveroomCond();
        queryCond.setLoginUserPosition(mApp.loginDoctorPosition);
        queryCond.setOperUserCode(mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        queryCond.setOperUserName(mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        queryCond.setPageNum(String.valueOf(pageno));
        queryCond.setRowNum(String.valueOf(IConstant.PAGE_SIZE));
        queryCond.setRequestClientType("1");
        queryCond.setSearchBroadcastTitle("");
        queryCond.setSearchClassCode("");
        queryCond.setSearchKeywordsCode("");
        queryCond.setSearchRiskCode("");
        queryCond.setSearchUserName("");
        loadDataTask = new LoadDataTask(queryCond);
        loadDataTask.execute();
    }


    class LoadDataTask extends AsyncTask<Void,Void,List<PreLiveInfo>> {
        QueryLiveroomCond queryCond;
        LoadDataTask(QueryLiveroomCond queryCond){
            this.queryCond = queryCond;
        }
        @Override
        protected List<PreLiveInfo> doInBackground(Void... voids) {
            mLoadDate = false;
            List<PreLiveInfo> retlist = new ArrayList();
            try {
                queryCond.setPageNum(String.valueOf(pageno));
                String quejson = new Gson().toJson(queryCond);
                String retstr = HttpNetService.urlConnectionService("jsonDataInfo="+quejson,"https://www.jiuyihtn.com:41041/broadcastLiveDataControlle/searchLiveRoomDetailsByBroadcastStateResNoticeList");
                NetRetEntity retEntity = JSON.parseObject(retstr,NetRetEntity.class);
                if(1==retEntity.getResCode() && StrUtils.defaulObjToStr(retEntity.getResJsonData()).length()>3){
                    retlist = JSON.parseArray(retEntity.getResJsonData(),PreLiveInfo.class);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            return retlist;
        }

        @Override
        protected void onPostExecute(List<PreLiveInfo> hotLiveInfos) {
            if(hotLiveInfos.size()>0){
                mdatas.addAll(hotLiveInfos);
                preLiveAdapter.setData(mdatas);
                preLiveAdapter.notifyDataSetChanged();
            }else{
                if(pageno>1){
                    pageno = pageno - 1;
                }
            }
            mLoadDate = true;
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case  R.id.iv_back_left:
                finish();
                break;
            case R.id.notice_add_forecast:
                Intent intent = new Intent(NoticeActivity.this, BeforesettingActivity.class);
                startActivity(intent);
                break;
            case R.id.iv_add:
                Intent parintent = new Intent(NoticeActivity.this, BeforesettingActivity.class);
                parintent.putExtra("live_type", LivePublisherActivity.LIVE_TYPE_PRELIVE);
                startActivity(parintent);
                break;
        }

    }
}
