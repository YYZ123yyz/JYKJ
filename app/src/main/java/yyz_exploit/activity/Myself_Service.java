package yyz_exploit.activity;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.media.Image;
import android.net.Uri;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.google.gson.Gson;
import com.hyphenate.easeui.EaseConstant;
import com.hyphenate.easeui.hyhd.VideoCallActivity;
import com.hyphenate.easeui.hyhd.VoiceCallActivity;

import java.util.ArrayList;
import java.util.List;

import entity.HZIfno;
import netService.HttpNetService;
import netService.entity.NetRetEntity;
import www.jykj.com.jykj_zxyl.R;
import www.jykj.com.jykj_zxyl.activity.home.MyClinicActivity;
import www.jykj.com.jykj_zxyl.activity.home.twjz.WDZS_WZXQActivity;
import www.jykj.com.jykj_zxyl.activity.home.twjz.WZXXActivity;
import www.jykj.com.jykj_zxyl.activity.home.wdzs.ProvideDoctorSetServiceState;
import www.jykj.com.jykj_zxyl.activity.home.wdzs.ProvideViewInteractOrderTreatmentAndPatientInterrogation;
import www.jykj.com.jykj_zxyl.activity.hyhd.ChatActivity;
import www.jykj.com.jykj_zxyl.adapter.TWJZNoFinishRecycleAdapter;
import www.jykj.com.jykj_zxyl.application.Constant;
import www.jykj.com.jykj_zxyl.application.JYKJApplication;
import www.jykj.com.jykj_zxyl.util.ActivityUtil;
import yyz_exploit.activity.activity.HelpActivity;


//我的服务历史
public class Myself_Service extends AppCompatActivity {
    public ProgressDialog mDialogProgress = null;
    private String mNetRetStr;                 //返回字符串
    private Context mContext;
    private Handler mHandler;
    private MyClinicActivity mActivity;
    private JYKJApplication mApp;
    private RecyclerView mNoFinishRecycleView;              //未完成列表
    private LinearLayoutManager layoutManager;
    private www.jykj.com.jykj_zxyl.adapter.TWJZNoFinishRecycleAdapter mTWJZNoFinishRecycleAdapter;       //适配器
    private List<HZIfno> mHZEntyties = new ArrayList<>();            //所有数据
    private ProvideDoctorSetServiceState mProvideDoctorSetServiceState;

    private List<ProvideViewInteractOrderTreatmentAndPatientInterrogation> provideViewInteractOrderTreatmentAndPatientInterrogations = new ArrayList<>();

    private int mPageNum = 1;                               //页数
    private int mRowNum = 10;                               //每页行数
    private int mType = 1;                               //就诊(治疗)类型.-1:全部;1:图文就诊;2:音频就诊;3:视频就诊;4:签约服务;5:电话就诊;
    private TextView mWWC;
    private TextView mYWC;
    private int mModel = 1;                      //当前模式 1= 未完成 2=已完成
    private LinearLayout mTWJZ;                      //图文就诊
    private LinearLayout mYPJZ;                      //音频就诊
    private LinearLayout mSPJZ;                      //视频就诊
    private LinearLayout mQYFW;                      //签约服务
    private LinearLayout mDHJZ;                      //电话就诊

    private ImageView mTWJZImage;                 //图文就诊
    private ImageView mYPJZImage;                 //音频就诊
    private ImageView mSPJZImage;                 //视频就诊
    private ImageView mQYFWImage;                 //签约服务
    private ImageView mDHJZImage;                 //电话就诊

    private RecyclerView mRecycleView;              //列表

    private ImageView iv_back_left,iv_add;

    private TextView layout_name;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mContext =Myself_Service.this;
        ActivityUtil.setStatusBarMain(Myself_Service.this);
        setContentView(R.layout.activity_myself__service);
        mApp = (JYKJApplication) Myself_Service.this.getApplication();
        initView();
        initHandler();
        data();
        getData();
    }


    private void initView() {
        iv_back_left = findViewById(R.id.iv_back_left);
        iv_back_left.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        //标题名称
        layout_name = findViewById(R.id.layout_name);
        layout_name.setText("我的服务历史");
        //加好隐藏
        iv_add = findViewById(R.id.iv_add);
        iv_add.setVisibility(View.INVISIBLE);
        mTWJZ = (LinearLayout) findViewById(R.id.ll_twjz);
        mYPJZ = (LinearLayout) findViewById(R.id.li_ypjz);
        mSPJZ = (LinearLayout) findViewById(R.id.li_spjz);
        mQYFW = (LinearLayout) findViewById(R.id.li_qyfw);
        mDHJZ = (LinearLayout) findViewById(R.id.li_dhjz);

        mTWJZ.setOnClickListener(new ButtonClick());
        mYPJZ.setOnClickListener(new ButtonClick());
        mSPJZ.setOnClickListener(new ButtonClick());
        mQYFW.setOnClickListener(new ButtonClick());
        mDHJZ.setOnClickListener(new ButtonClick());

        mTWJZImage = (ImageView) findViewById(R.id.iv_twjz);
        mYPJZImage = (ImageView) findViewById(R.id.iv_ypjz);
        mSPJZImage = (ImageView) findViewById(R.id.iv_spjz);
        mQYFWImage = (ImageView) findViewById(R.id.iv_qyfw);
        mDHJZImage = (ImageView) findViewById(R.id.iv_dhjz);

        mNoFinishRecycleView = (RecyclerView)findViewById(R.id.service_recycleView);
        //创建默认的线性LayoutManager
        layoutManager = new LinearLayoutManager(mContext);
        layoutManager.setOrientation(LinearLayout.VERTICAL);
        mNoFinishRecycleView.setLayoutManager(layoutManager);
        //如果可以确定每个item的高度是固定的，设置这个选项可以提高性能
        mNoFinishRecycleView.setHasFixedSize(true);
        //创建并设置Adapter
        mTWJZNoFinishRecycleAdapter = new www.jykj.com.jykj_zxyl.adapter.TWJZNoFinishRecycleAdapter(provideViewInteractOrderTreatmentAndPatientInterrogations, mContext);
        mNoFinishRecycleView.setAdapter(mTWJZNoFinishRecycleAdapter);
        mTWJZNoFinishRecycleAdapter.setOnWZXXItemClickListener(new www.jykj.com.jykj_zxyl.adapter.TWJZNoFinishRecycleAdapter.OnWZXXItemClickListener() {
            @Override
            public void onClick(int position) {
                startActivity(new Intent(mContext, WZXXActivity.class).putExtra("wzxx", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position)));
            }

            @Override
            public void onLongClick(int position) {

            }
        });
        mTWJZNoFinishRecycleAdapter.setOnHYHDItemClickListener(new www.jykj.com.jykj_zxyl.adapter.TWJZNoFinishRecycleAdapter.OnHYHDItemClickListener() {
            @Override
            public void onClick(int position) {
                switch (mType) {
                    case 1:
                        Intent intent = new Intent();
                        intent.setClass(mContext, ChatActivity.class);
                        intent.putExtra("userCode", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientCode());
                        intent.putExtra("userName", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientName());
                        intent.putExtra("chatType", "twjz");

                        intent.putExtra("loginDoctorPosition", mApp.loginDoctorPosition);
                        intent.putExtra("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
                        intent.putExtra("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
                        intent.putExtra("orderCode", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getOrderCode());

                        intent.putExtra(EaseConstant.EXTRA_MESSAGE_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitImgText());           //消息数量
                        intent.putExtra(EaseConstant.EXTRA_VOICE_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitAudio());           //音频时长（单位：秒）
                        intent.putExtra(EaseConstant.EXTRA_VEDIO_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitVideo());           //视频时长（单位：秒）
                        startActivity(intent);
                        break;
                    case 2:
                        if (provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitAudio() <= 0) {
                            Toast.makeText(Myself_Service.this, "语音时长已用尽", Toast.LENGTH_LONG).show();
                            return;
                        }
                        startActivity(new Intent(Myself_Service.this, VoiceCallActivity.class)
                                .putExtra("username", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientCode())
                                .putExtra("isComingCall", false)
                                .putExtra("nickName", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientName())
                                .putExtra("voiceNum", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitAudio()));
                        break;
                    case 3:
                        if (provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitVideo() <= 0) {
                            Toast.makeText(Myself_Service.this, "视频时长已用尽", Toast.LENGTH_LONG).show();
                            return;
                        }
                        int time = provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitVideo();
                        startActivity(new Intent(Myself_Service.this, VideoCallActivity.class)
                                .putExtra("username", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientCode())
                                .putExtra("isComingCall", false)
                                .putExtra("vedioNum", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitVideo()));
                        break;
                    case 4:
                        intent = new Intent();
                        intent.setClass(mContext, ChatActivity.class);
                        intent.putExtra("userCode", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientCode());
                        intent.putExtra("userName", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getPatientName());

                        intent.putExtra("loginDoctorPosition", mApp.loginDoctorPosition);
                        intent.putExtra("operDoctorCode", mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
                        intent.putExtra("operDoctorName", mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
                        intent.putExtra("orderCode", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getOrderCode());

                        intent.putExtra(EaseConstant.EXTRA_MESSAGE_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitImgText());           //消息数量
                        intent.putExtra(EaseConstant.EXTRA_VOICE_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitAudio());           //音频时长（单位：秒）
                        intent.putExtra(EaseConstant.EXTRA_VEDIO_NUM, provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getLimitVideo());           //视频时长（单位：秒）
                        startActivity(intent);
                        break;
                    case 5:
                        intent = new Intent(Intent.ACTION_CALL);
                        Uri data = Uri.parse("tel:" + provideViewInteractOrderTreatmentAndPatientInterrogations.get(position).getInterrogationPatientLinkPhone());
                        intent.setData(data);
                        startActivity(intent);

                }


            }

            @Override
            public void onLongClick(int position) {

            }
        });
        mTWJZNoFinishRecycleAdapter.setOnKJCFItemClickListener(new TWJZNoFinishRecycleAdapter.OnKJCFItemClickListener() {
            @Override
            public void onClick(int position) {
                startActivity(new Intent(mContext, WDZS_WZXQActivity.class).putExtra("wzxx", provideViewInteractOrderTreatmentAndPatientInterrogations.get(position)));
            }

            @Override
            public void onLongClick(int position) {

            }
        });




    }

    private void data() {
        getProgressBar("请稍候", "正在获取数据。。。");
        ProvideViewInteractOrderTreatmentAndPatientInterrogation provideViewInteractOrderTreatmentAndPatientInterrogation = new ProvideViewInteractOrderTreatmentAndPatientInterrogation();
        provideViewInteractOrderTreatmentAndPatientInterrogation.setLoginDoctorPosition(mApp.loginDoctorPosition);
        provideViewInteractOrderTreatmentAndPatientInterrogation.setOperDoctorCode(mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
        provideViewInteractOrderTreatmentAndPatientInterrogation.setOperDoctorName(mApp.mViewSysUserDoctorInfoAndHospital.getUserName());
        provideViewInteractOrderTreatmentAndPatientInterrogation.setPageNum(mPageNum + "");
        provideViewInteractOrderTreatmentAndPatientInterrogation.setRowNum(mRowNum + "");
        provideViewInteractOrderTreatmentAndPatientInterrogation.setTreatmentType(mType);

        new Thread() {
            public void run() {
                try {
                    String string = new Gson().toJson(provideViewInteractOrderTreatmentAndPatientInterrogation);
                    mNetRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + string, Constant.SERVICEURL + "doctorInteractDataControlle/searchMyClinicDetailResTreatmentRecord");
                    Log.e("tag", "run:vvvvv "+mNetRetStr );
                    String string01 = Constant.SERVICEURL + "msgDataControlle/searchMsgPushReminderAllCount";
                    System.out.println(string + string01);
                } catch (Exception e) {
                    NetRetEntity retEntity = new NetRetEntity();
                    retEntity.setResCode(0);
                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
                    mNetRetStr = new Gson().toJson(retEntity);
                    e.printStackTrace();
                }
                mHandler.sendEmptyMessage(1);
            }
        }.start();
    }


    private void initHandler() {
        mHandler = new Handler() {
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case 0:
                        cacerProgress();
                        NetRetEntity netRetEntity = JSON.parseObject(mNetRetStr, NetRetEntity.class);
                        if (netRetEntity.getResCode() == 0) {
                            Toast.makeText(Myself_Service.this, netRetEntity.getResMsg(), Toast.LENGTH_SHORT).show();
                        } else {
                            mProvideDoctorSetServiceState = JSON.parseObject(netRetEntity.getResJsonData(), ProvideDoctorSetServiceState.class);
                            if (mProvideDoctorSetServiceState != null){
                                data();
                            }

                        }

                        break;
                    case 1:
                        cacerProgress();
                        netRetEntity = JSON.parseObject(mNetRetStr, NetRetEntity.class);
                        if (netRetEntity.getResCode() == 0) {
                            Toast.makeText(mContext, netRetEntity.getResMsg(), Toast.LENGTH_SHORT).show();
                        } else {
                            setLayoutDate();
                            provideViewInteractOrderTreatmentAndPatientInterrogations = JSON.parseArray(netRetEntity.getResJsonData(), ProvideViewInteractOrderTreatmentAndPatientInterrogation.class);
                            mTWJZNoFinishRecycleAdapter.setDate(provideViewInteractOrderTreatmentAndPatientInterrogations);
                            mTWJZNoFinishRecycleAdapter.notifyDataSetChanged();
                        }
                        break;
                }
            }
        };
    }
    /**
     * 设置数据
     */
    private void getData() {
//        getProgressBar("请稍候", "正在获取数据。。。");
//        ProvideDoctorSetServiceState provideDoctorSetServiceState = new ProvideDoctorSetServiceState();
//        provideDoctorSetServiceState.setLoginDoctorPosition(mApp.loginDoctorPosition);
//        provideDoctorSetServiceState.setOperDoctorCode(mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
//        provideDoctorSetServiceState.setOperDoctorName(mApp.mViewSysUserDoctorInfoAndHospital.getDoctorCode());
//
//        new Thread() {
//            public void run() {
//                try {
//                    String string = new Gson().toJson(provideDoctorSetServiceState);
//                    mNetRetStr = HttpNetService.urlConnectionService("jsonDataInfo=" + string, Constant.SERVICEURL + "doctorInteractDataControlle/searchMyClinicDetailResServiceState");
//                    String string01 = Constant.SERVICEURL + "msgDataControlle/searchMsgPushReminderAllCount";
//                    System.out.println(string + string01);
//                } catch (Exception e) {
//                    NetRetEntity retEntity = new NetRetEntity();
//                    retEntity.setResCode(0);
//                    retEntity.setResMsg("网络连接异常，请联系管理员：" + e.getMessage());
//                    mNetRetStr = new Gson().toJson(retEntity);
//                    e.printStackTrace();
//                }
//                mHandler.sendEmptyMessage(0);
//            }
//        }.start();
    }


    class ButtonClick implements View.OnClickListener {
        @Override
        public void onClick(View view) {
            switch (view.getId()) {
                case R.id.ll_twjz:
                    mType = 1;
                    data();
                    break;
                case R.id.li_ypjz:
                    mType = 2;
                    data();
                    break;
                case R.id.li_spjz:
                    mType = 3;
                    data();
                    break;
                case R.id.li_qyfw:
                    mType = 4;
                    data();
                    break;
                case R.id.li_dhjz:
                    mType = 5;
                    data();
                    break;

            }
        }
    }


    //    /**
//     * 设置显示
//     */
    private void setLayoutDate() {
//        if (mProvideDoctorSetServiceState.getFlagImgText() == 1)
//            mTWJZImage.setImageResource(R.mipmap.wdzs_twjz);
//        else
//            mTWJZImage.setImageResource(R.mipmap.tw_no);
//
//        if (mProvideDoctorSetServiceState.getFlagAudio() == 1)
//            mYPJZImage.setImageResource(R.mipmap.yyjz);
//        else
//            mYPJZImage.setImageResource(R.mipmap.yy_no);
//
//        if (mProvideDoctorSetServiceState.getFlagVideo() == 1)
//            mSPJZImage.setImageResource(R.mipmap.wdzs_spjz);
//        else
//            mSPJZImage.setImageResource(R.mipmap.sp_no);
//
//        if (mProvideDoctorSetServiceState.getFlagSigning() == 1)
//            mQYFWImage.setImageResource(R.mipmap.qyjz);
//        else
//            mQYFWImage.setImageResource(R.mipmap.qy_no);
//
//        if (mProvideDoctorSetServiceState.getFlagPhone() == 1)
//            mDHJZImage.setImageResource(R.mipmap.wdzs_dhjz);
//        else
//            mDHJZImage.setImageResource(R.mipmap.dh_no);
    }


    /**
     * 获取进度条
     */

    public void getProgressBar(String title, String progressPrompt) {
        if (mDialogProgress == null) {
            mDialogProgress = new ProgressDialog(Myself_Service.this);
        }
        mDialogProgress.setTitle(title);
        mDialogProgress.setMessage(progressPrompt);
        mDialogProgress.setCancelable(false);
        mDialogProgress.show();
    }

    /**
     * 取消进度条
     */
    public void cacerProgress() {
        if (mDialogProgress != null) {
            mDialogProgress.dismiss();
        }
    }
}
