package yyz_exploit.activity.util;

import java.util.Iterator;
import java.util.Map;
import java.util.Objects;

import entity.basicDate.ProvideBasicsDomain;
import www.jykj.com.jykj_zxyl.util.StrUtils;

/**
 * Description:直播工具转换类
 *
 * @author: qiuxinhai
 * @date: 2020-07-25 14:37
 */
public class LiveConvertUtil {
    /**
     * 通过Map转换称字符串
     * @param maps 数据类别
     * @return str
     */
    public static String getMapToStr(Map<String, ProvideBasicsDomain> maps) {
        StringBuilder classCodeNameBuffer = new StringBuilder();
        Iterator it;
        String paritem;
        ProvideBasicsDomain thebean;
        it = maps.keySet().iterator();
        while (it.hasNext()) {
            paritem = StrUtils.defaulObjToStr(it.next());
            thebean = maps.get(paritem);
            if (classCodeNameBuffer.toString().length() > 0) {
                classCodeNameBuffer.append(",");
            }
            classCodeNameBuffer.append(Objects.requireNonNull(thebean).getAttrName());
        }
        return classCodeNameBuffer.toString();
    }

    /**
     * 通过Map获取code拼接字符串
     * @param maps 数据列表
     * @return str
     */
    public static String getMapToStrCode(Map<String, ProvideBasicsDomain> maps){
        StringBuilder classCodeBuffer = new StringBuilder();
        Iterator it;
        String paritem;
        ProvideBasicsDomain thebean;
        it = maps.keySet().iterator();
        while (it.hasNext()) {
            paritem = StrUtils.defaulObjToStr(it.next());
            thebean = maps.get(paritem);
            if (classCodeBuffer.toString().length() > 0) {
                classCodeBuffer.append("^");
            }
            classCodeBuffer.append(Objects.requireNonNull(thebean).getAttrCode());
        }
        return classCodeBuffer.toString();
    }

    /**
     * 通过Map获取Name拼接字符串
     * @param maps 数据列表
     * @return str
     */
    public static String getMapToStrName(Map<String, ProvideBasicsDomain> maps){
        StringBuilder classNameBuffer = new StringBuilder();
        Iterator it;
        String paritem;
        ProvideBasicsDomain thebean;
        it = maps.keySet().iterator();
        while (it.hasNext()) {
            paritem = StrUtils.defaulObjToStr(it.next());
            thebean = maps.get(paritem);
            if (classNameBuffer.toString().length() > 0) {
                classNameBuffer.append("^");
            }
            classNameBuffer.append(Objects.requireNonNull(thebean).getAttrName());
        }
        return classNameBuffer.toString();
    }
}
