package yyz_exploit.Utils;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.Map;

public class GsonUtil {


    /**
     * 把一个json字符串变成对象
     *
     * @param json
     * @param cls
     * @return
     */
    public static <T> T parseJsonToBean(String json, Class<T> cls) {
        Gson gson = new Gson();
        T t = null;
        try {
            t = gson.fromJson(json, cls);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return t;
    }


    /**
     * 把json字符串变成集合
     * params: new TypeToken<List<yourbean>>(){}.getSelect_type(),
     *
     * @param json
     * @param type new TypeToken<List<yourbean>>(){}.getSelect_type()
     * @return
     */
    public static <T> T parseJsonToList(String json, Type type) {
        Gson gson = new Gson();
        T t = null;
        try {
            t = gson.fromJson(json, type);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return t;
    }


    /**
     * 把json字符串变成map
     * params: Map<String, String>
     *
     * @param json
     * @param
     * @return
     */
    public static Map<String, String> parseJsonToMap(String json) {
        Gson gson = new Gson();

        Type type = new TypeToken<Map<String, String>>() {
        }.getType();
        Map<String, String> map = gson.fromJson(json, type);

        return map;
    }


    /**
     * 把一个对象变成json字符串
     *
     * @param cls
     * @return
     */
    public static String parseBeanToJson(Object cls) {
        Gson gson = new Gson();
        String t = null;
        try {
            t = gson.toJson(cls);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return t;
    }


}
